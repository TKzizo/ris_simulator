 counter3=1;
47     for x=0:sqrt(N)-1
46         for y=0:sqrt(N)-1
45             array_RIS_LOS(counter3)=exp(1i*k*dis*(x*sind(theta_T_RIS_LOS) + y*sind(phi_T_RIS_LOS)*cosd(theta_T_RIS_LOS) )) ;
44             counter3=counter3+1;
43         end
42     end
41
40
39     if ArrayType == 1
38     array_Tx_LOS = zeros(1,Nt);
37     counter3=1;
36         for x=0:Nt-1
35             array_Tx_LOS(counter3)=exp(1i*k*dis*(x*sind(phi_Tx_LOS)*cosd(theta_Tx_LOS) )) ;
34             counter3=counter3+1;
33         end
32     elseif ArrayType == 2
31        counter3=1;
30         for x=0:sqrt(Nt)-1
29             for y=0:sqrt(Nt)-1
28             array_Tx_LOS(counter3)=exp(1i*k*dis*(x*sind(phi_Tx_LOS)*cosd(theta_Tx_LOS) + y*sind(theta_Tx_LOS))) ;
27             counter3=counter3+1;
26             end
25         end
24
23     end
22
21     % Link Attentuation (LOS)
20
19     % Note: This is different than FSPL (Shadowing/Waveguiding effect included with n < 2)
18     L_dB_LOS=-20*log10(4*pi/lambda) - 10*n_LOS*(1+b_LOS*((Frequency-f0)/f0))*log10(d_T_RIS)- randn*sigma_LOS;
17
16     L_LOS=10^(L_dB_LOS/10);
15
14     % LOS COMPONENT GENERATED (with random phase) (practical PL and shadowing)
13     % Element radiation pattern considered (Version 1.5)
12     h_LOS=sqrt(L_LOS)*transpose(array_RIS_LOS)*array_Tx_LOS*exp(1i*rand*2*pi)*sqrt(Gain*(cosd(theta_T_RIS_LOS))^(2*q));
11

